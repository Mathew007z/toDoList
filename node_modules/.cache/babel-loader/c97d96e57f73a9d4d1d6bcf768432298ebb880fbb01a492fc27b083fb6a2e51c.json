{"ast":null,"code":"var _jsxFileName = \"/Users/matiasacuna/Desktop/task-react/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleCheck, faL, faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State (to do list) state. \n  const [toDo, setToDo] = useState([{\n    id: 1,\n    \"title\": \"Task 1\",\n    \"status\": false\n  }, {\n    id: 1,\n    \"title\": \"Task 1\",\n    \"status\": false\n  }]);\n\n  // Temp State\n  // State for newTask.\n  const [newTask, setNewTask] = useState('');\n\n  // State for task, maybe you modify something(edit task)\n  const [updateData, setUpDateData] = useState('');\n\n  // Add task \n  const addTask = () => {\n    if (newTask) {\n      let num = toDo.length + 1;\n      let newEntry = {\n        id: num,\n        title: newTask,\n        status: false\n      };\n      setToDo([...toDo, newEntry]);\n      setNewTask('');\n    }\n  };\n\n  // Delete \n  const deleteTask = id => {\n    let newTasks = toDo.filter(task => task.id !== id);\n    setToDo(newTasks);\n  };\n\n  // Mark task os done or completed\n  const markDone = id => {\n    let newTasks = toDo.map(task => {\n      if (task.id === id) {\n        return {\n          ...task,\n          status: !task.status\n        };\n      }\n      return task;\n    });\n    setToDo(newTasks);\n  };\n\n  // cancel\n\n  const cancelUpdate = () => {\n    setUpDateData('');\n  };\n\n  // change task for Update \n  const changeTask = e => {\n    let newEntry = {\n      id: updateData.id,\n      title: e.target.value,\n      status: updateData.status ? true : false\n    };\n    setUpDateData(newEntry);\n  };\n\n  // update task\n  const updateTask = () => {\n    let filterRecords = [...toDo].filter(task => task.id !== updateData.id);\n    let updateObject = [...filterRecords, updateData];\n    setToDo(updateObject);\n    setUpDateData('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"To Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), updateData && updateData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            value: updateData && updateData.title,\n            onChange: e => changeTask(e),\n            className: \"form-control form-control-lg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-lg btn-success mr-20\",\n            onClick: updateTask,\n            children: \"Actualizar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-lg btn-warning\",\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 14\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            value: newTask,\n            onChange: e => setNewTask(e.target.value),\n            className: \"form-control from-control-lg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-lg btn-success\",\n            onClick: addTask,\n            children: \"Agregar Tarea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this)\n    }, void 0, false), toDo && toDo.length ? ' ' : 'No tasks', toDo && toDo.map((task, index) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col taskBg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: task.status ? 'done' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskNumber\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskText\",\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"iconsWrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"span2\",\n              title: \"Completed / Not Completed\",\n              onClick: e => markDone(task.id),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCircleCheck\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this), task.status ? null : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"span2\",\n              title: \"Edit\",\n              onClick: () => setUpDateData({\n                id: task.id,\n                title: task.title,\n                status: task.status ? true : false\n              }),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faPen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"span2\",\n              title: \"Delete\",\n              onClick: () => deleteTask(task.id),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTrashCan\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)\n      }, void 0, false);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MYkO14wgfXxc3Zm3mIJKK/R2X88=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","FontAwesomeIcon","faCircleCheck","faL","faPen","faTrashCan","useState","App","toDo","setToDo","id","newTask","setNewTask","updateData","setUpDateData","addTask","num","length","newEntry","title","status","deleteTask","newTasks","filter","task","markDone","map","cancelUpdate","changeTask","e","target","value","updateTask","filterRecords","updateObject","index"],"sources":["/Users/matiasacuna/Desktop/task-react/src/App.js"],"sourcesContent":["import React from 'react'\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n import { faCircleCheck, faL, faPen , faTrashCan } from '@fortawesome/free-solid-svg-icons' \n import { useState } from 'react'\n\n\n\nfunction App() {\n\n  // State (to do list) state. \n  const [toDo, setToDo] = useState([\n    {id: 1, \"title\": \"Task 1\", \"status\": false},\n    {id: 1, \"title\": \"Task 1\", \"status\": false}\n  ])\n\n  // Temp State\n  // State for newTask.\n  const [newTask, setNewTask] = useState('');\n\n\n  // State for task, maybe you modify something(edit task)\n  const [updateData, setUpDateData] = useState('');\n\n// Add task \nconst addTask = () => {\n    if(newTask){\n      let num = toDo.length + 1;\n      let newEntry = {id: num, title: newTask, status: false};\n      setToDo([...toDo, newEntry])\n      setNewTask('');\n    }\n}\n\n// Delete \nconst deleteTask = (id) => {\n  let newTasks = toDo.filter(task => task.id !== id);\n  setToDo(newTasks);\n}\n\n// Mark task os done or completed\nconst markDone = (id) => {\n  let newTasks = toDo.map( task => { \n    if(task.id === id){\n      return ( {...task , status: !task.status});\n    }\n    return task;\n  })\n  setToDo(newTasks);\n}\n\n\n// cancel\n\nconst cancelUpdate = () => {\n  setUpDateData('')\n}\n\n\n// change task for Update \nconst changeTask = (e) => {\n  let newEntry = {\n    id:updateData.id,\n    title:e.target.value,\n    status: updateData.status ? true : false\n  }\n  setUpDateData(newEntry);\n}\n\n// update task\nconst updateTask = () => {\n  let filterRecords = [...toDo].filter(task => task.id !== updateData.id)\n  let updateObject = [...filterRecords, updateData];\n  setToDo(updateObject);\n  setUpDateData('')\n}\n\n\n\n\n\n  return (\n\n\n    <div className='container App'>\n      <h2>To Do List</h2>\n\n      {/* Actualizar tarea */}\n      {updateData && updateData ? (\n        <>\n             <div className='row'>\n              <div className='col'>\n                <input\n                value={updateData && updateData.title}\n                onChange={(e) => changeTask(e)}\n                className='form-control form-control-lg'\n                  />\n            </div>\n            <div className='col-auto'>\n              <button className='btn btn-lg btn-success mr-20' \n              onClick={updateTask}>Actualizar</button>\n              <button className='btn btn-lg btn-warning'>Cancelar</button>\n            </div>\n          </div>\n            </>\n      ) : (\n          <>\n\n            {/* Adherir tarea */}\n            <div className='row'>\n              <div className='col'>\n                <input\n                value={newTask}\n                onChange={(e) => setNewTask(e.target.value)}\n                className='form-control from-control-lg'\n\n                />\n              </div>\n              <div className='col-auto'>\n                <button className='btn btn-lg btn-success' onClick={addTask}>Agregar Tarea</button>\n              </div>\n            </div>\n          </>\n      )}\n   \n\n\n\n\n\n\n\n\n      {toDo && toDo.length ? ' ' : 'No tasks'}\n      {toDo && toDo.map((task, index)=> {\n        return(\n          <>\n            <div className='col taskBg'> \n              <div className={task.status ? 'done' : ''}>\n                  <span className='taskNumber'>{index + 1}</span>\n                  <span className='taskText'>{task.title}</span>\n              </div>\n              <div className='iconsWrap'>\n                <span className='span2' title='Completed / Not Completed' \n                onClick={(e) => markDone(task.id)}>\n                  <FontAwesomeIcon icon={faCircleCheck}/>\n                </span>\n\n                {task.status ? null : (\n                    <span className='span2' title='Edit'\n                    onClick={() => setUpDateData({\n                      id:task.id,\n                      title: task.title,\n                      status: task.status ? true : false\n                    })}>\n                      <FontAwesomeIcon icon={faPen}/>\n                    </span>\n                )}\n                \n                <span className='span2' title='Delete' \n                onClick={() => deleteTask(task.id)}>\n                  <FontAwesomeIcon icon={faTrashCan}/>\n                </span>\n              </div>\n            </div>\n            \n          </>\n\n        )\n\n      })}\n    </div>\n\n    \n \n)\n}\n\nexport default App;\n\n\n\n    \n \n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}