{"ast":null,"code":"var _jsxFileName = \"/Users/matiasacuna/Desktop/task-react/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useState } from 'react';\nimport AddTaskForm from './componentes/AddTaskForm/AddTaskForm';\nimport ToDo from './componentes/ToDo/ToDo';\nimport UpdateForm from './componentes/UpdateForm/UpdateForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State (to do list) state. \n  const [toDo, setToDo] = useState([]);\n\n  // Temp State\n  // State for newTask.\n  const [newTask, setNewTask] = useState('');\n\n  // State for task, maybe you modify something(edit task)\n  const [updateData, setUpDateData] = useState('');\n\n  // Add task \n  const addTask = () => {\n    if (newTask) {\n      let num = toDo.length + 1;\n      let newEntry = {\n        id: num,\n        title: newTask,\n        status: false\n      };\n      setToDo([...toDo, newEntry]);\n      setNewTask('');\n    }\n  };\n\n  // Delete \n  const deleteTask = id => {\n    let newTasks = toDo.filter(task => task.id !== id);\n    setToDo(newTasks);\n  };\n\n  // Mark task os done or completed\n  const markDone = id => {\n    let newTasks = toDo.map(task => {\n      if (task.id === id) {\n        return {\n          ...task,\n          status: !task.status\n        };\n      }\n      return task;\n    });\n    setToDo(newTasks);\n  };\n\n  // cancel\n\n  const cancelUpdate = () => {\n    setUpDateData('');\n  };\n\n  // change task for Update \n  const changeTask = e => {\n    let newEntry = {\n      id: updateData.id,\n      title: e.target.value,\n      status: updateData.status ? true : false\n    };\n    setUpDateData(newEntry);\n  };\n\n  // update task\n  const updateTask = () => {\n    let filterRecords = [...toDo].filter(task => task.id !== updateData.id);\n    let updateObject = [...filterRecords, updateData];\n    setToDo(updateObject);\n    setUpDateData('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"To Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), updateData && updateData ? /*#__PURE__*/_jsxDEV(UpdateForm, {\n      updateData: updateData,\n      changeTask: changeTask,\n      updateTask: updateTask,\n      cancelUpdate: cancelUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 8\n    }, this) : /*#__PURE__*/_jsxDEV(AddTaskForm, {\n      newTask: newTask,\n      setNewTask: setNewTask,\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), toDo && toDo.length ? ' ' : 'No tasks', /*#__PURE__*/_jsxDEV(ToDo, {\n      toDo: toDo,\n      markDone: markDone,\n      setUpDateData: setUpDateData,\n      deleteTask: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gxg1j+PFnJUAYIOrVuVEaT4FDFE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","AddTaskForm","ToDo","UpdateForm","App","toDo","setToDo","newTask","setNewTask","updateData","setUpDateData","addTask","num","length","newEntry","id","title","status","deleteTask","newTasks","filter","task","markDone","map","cancelUpdate","changeTask","e","target","value","updateTask","filterRecords","updateObject"],"sources":["/Users/matiasacuna/Desktop/task-react/src/App.js"],"sourcesContent":["import React from 'react'\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n import { useState } from 'react'\n import AddTaskForm from './componentes/AddTaskForm/AddTaskForm'\nimport ToDo from './componentes/ToDo/ToDo'\nimport UpdateForm from './componentes/UpdateForm/UpdateForm';\n\n\n\nfunction App() {\n\n  // State (to do list) state. \n  const [toDo, setToDo] = useState([]);\n\n  // Temp State\n  // State for newTask.\n  const [newTask, setNewTask] = useState('');\n\n\n  // State for task, maybe you modify something(edit task)\n  const [updateData, setUpDateData] = useState('');\n\n// Add task \nconst addTask = () => {\n    if(newTask){\n      let num = toDo.length + 1;\n      let newEntry = {id: num, title: newTask, status: false};\n      setToDo([...toDo, newEntry])\n      setNewTask('');\n    }\n}\n\n// Delete \nconst deleteTask = (id) => {\n  let newTasks = toDo.filter(task => task.id !== id);\n  setToDo(newTasks);\n}\n\n// Mark task os done or completed\nconst markDone = (id) => {\n  let newTasks = toDo.map( task => { \n    if(task.id === id){\n      return ( {...task , status: !task.status});\n    }\n    return task;\n  })\n  setToDo(newTasks);\n}\n\n\n// cancel\n\nconst cancelUpdate = () => {\n  setUpDateData('')\n}\n\n\n// change task for Update \nconst changeTask = (e) => {\n  let newEntry = {\n    id:updateData.id,\n    title:e.target.value,\n    status: updateData.status ? true : false\n  }\n  setUpDateData(newEntry);\n}\n\n// update task\nconst updateTask = () => {\n  let filterRecords = [...toDo].filter(task => task.id !== updateData.id)\n  let updateObject = [...filterRecords, updateData];\n  setToDo(updateObject);\n  setUpDateData('')\n}\n\n\n\n\n\n  return (\n\n    <div className='container App'>\n      <h2>To Do List</h2>\n\n     \n      {updateData && updateData ? (\n       <UpdateForm\n       updateData={updateData}\n       changeTask={changeTask}\n       updateTask={updateTask}\n       cancelUpdate={cancelUpdate}\n\n       /> \n       \n      ) : (\n        <AddTaskForm\n        newTask={newTask}\n        setNewTask={setNewTask}\n        addTask={addTask}\n        />\n      )}\n   \n      {toDo && toDo.length ? ' ' : 'No tasks'}\n        <ToDo\n        toDo={toDo}\n        markDone={markDone}\n        setUpDateData={setUpDateData}\n        deleteTask={deleteTask}\n        />\n    </div>\n)\n}\n\nexport default App;\n\n\n\n    \n \n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}