{"ast":null,"code":"var _jsxFileName = \"/Users/matiasacuna/Desktop/task-react/src/componentes/ToDo/ToDo.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ToDo = _ref => {\n  let {\n    ToDo\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: toDo && toDo.map((task, index) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col taskBg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: task.status ? 'done' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskNumber\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskText\",\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"iconsWrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"span2\",\n              title: \"Completed / Not Completed\",\n              onClick: e => markDone(task.id),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCircleCheck\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 21\n            }, this), task.status ? null : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"span2\",\n              title: \"Edit\",\n              onClick: () => setUpDateData({\n                id: task.id,\n                title: task.title,\n                status: task.status ? true : false\n              }),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faPen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"span2\",\n              title: \"Delete\",\n              onClick: () => deleteTask(task.id),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTrashCan\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, this)\n      }, void 0, false);\n    })\n  }, void 0, false);\n};\n_c = ToDo;\nexport default ToDo;\nvar _c;\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"names":["ToDo","toDo","map","task","index","status","title","e","markDone","id","faCircleCheck","setUpDateData","faPen","deleteTask","faTrashCan"],"sources":["/Users/matiasacuna/Desktop/task-react/src/componentes/ToDo/ToDo.jsx"],"sourcesContent":["\n\n\n\nconst ToDo = ({ToDo}) => {\n\n\n\n    return (\n        <>\n        \n        {toDo && toDo.map((task, index)=> {\n            return(\n              <>\n                <div className='col taskBg'> \n                  <div className={task.status ? 'done' : ''}>\n                      <span className='taskNumber'>{index + 1}</span>\n                      <span className='taskText'>{task.title}</span>\n                  </div>\n                  <div className='iconsWrap'>\n                    <span className='span2' title='Completed / Not Completed' \n                    onClick={(e) => markDone(task.id)}>\n                      <FontAwesomeIcon icon={faCircleCheck}/>\n                    </span>\n    \n                    {task.status ? null : (\n                        <span className='span2' title='Edit'\n                        onClick={() => setUpDateData({\n                          id:task.id,\n                          title: task.title,\n                          status: task.status ? true : false\n                        })}>\n                          <FontAwesomeIcon icon={faPen}/>\n                        </span>\n                    )}\n                    \n                    <span className='span2' title='Delete' \n                    onClick={() => deleteTask(task.id)}>\n                      <FontAwesomeIcon icon={faTrashCan}/>\n                    </span>\n                  </div>\n                </div>\n                \n              </>\n    \n            )\n    \n          })\n          }\n          </>\n    )\n  }\n  \n\n\n  export default ToDo;"],"mappings":";;;AAIA,MAAMA,IAAI,GAAG,QAAY;EAAA,IAAX;IAACA;EAAI,CAAC;EAIhB,oBACI;IAAA,UAECC,IAAI,IAAIA,IAAI,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAI;MAC9B,oBACE;QAAA,uBACE;UAAK,SAAS,EAAC,YAAY;UAAA,wBACzB;YAAK,SAAS,EAAED,IAAI,CAACE,MAAM,GAAG,MAAM,GAAG,EAAG;YAAA,wBACtC;cAAM,SAAS,EAAC,YAAY;cAAA,UAAED,KAAK,GAAG;YAAC;cAAA;cAAA;cAAA;YAAA,QAAQ,eAC/C;cAAM,SAAS,EAAC,UAAU;cAAA,UAAED,IAAI,CAACG;YAAK;cAAA;cAAA;cAAA;YAAA,QAAQ;UAAA;YAAA;YAAA;YAAA;UAAA,QAC5C,eACN;YAAK,SAAS,EAAC,WAAW;YAAA,wBACxB;cAAM,SAAS,EAAC,OAAO;cAAC,KAAK,EAAC,2BAA2B;cACzD,OAAO,EAAGC,CAAC,IAAKC,QAAQ,CAACL,IAAI,CAACM,EAAE,CAAE;cAAA,uBAChC,QAAC,eAAe;gBAAC,IAAI,EAAEC;cAAc;gBAAA;gBAAA;gBAAA;cAAA;YAAE;cAAA;cAAA;cAAA;YAAA,QAClC,EAENP,IAAI,CAACE,MAAM,GAAG,IAAI,gBACf;cAAM,SAAS,EAAC,OAAO;cAAC,KAAK,EAAC,MAAM;cACpC,OAAO,EAAE,MAAMM,aAAa,CAAC;gBAC3BF,EAAE,EAACN,IAAI,CAACM,EAAE;gBACVH,KAAK,EAAEH,IAAI,CAACG,KAAK;gBACjBD,MAAM,EAAEF,IAAI,CAACE,MAAM,GAAG,IAAI,GAAG;cAC/B,CAAC,CAAE;cAAA,uBACD,QAAC,eAAe;gBAAC,IAAI,EAAEO;cAAM;gBAAA;gBAAA;gBAAA;cAAA;YAAE;cAAA;cAAA;cAAA;YAAA,QAEpC,eAED;cAAM,SAAS,EAAC,OAAO;cAAC,KAAK,EAAC,QAAQ;cACtC,OAAO,EAAE,MAAMC,UAAU,CAACV,IAAI,CAACM,EAAE,CAAE;cAAA,uBACjC,QAAC,eAAe;gBAAC,IAAI,EAAEK;cAAW;gBAAA;gBAAA;gBAAA;cAAA;YAAE;cAAA;cAAA;cAAA;YAAA,QAC/B;UAAA;YAAA;YAAA;YAAA;UAAA,QACH;QAAA;UAAA;UAAA;UAAA;QAAA;MACF,iBAEL;IAIP,CAAC;EAAC,iBAEC;AAEX,CAAC;AAAA,KA/CGd,IAAI;AAmDR,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}