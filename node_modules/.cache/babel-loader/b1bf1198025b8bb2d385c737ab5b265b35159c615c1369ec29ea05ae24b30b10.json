{"ast":null,"code":"var _jsxFileName = \"/Users/matiasacuna/Desktop/Trabajo-React-main/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleCheck, faL, faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State (to do list) state. \n  const [toDo, setToDo] = useState([{\n    id: 1,\n    \"title\": \"Task 1\",\n    \"status\": false\n  }, {\n    id: 1,\n    \"title\": \"Task 1\",\n    \"status\": false\n  }]);\n\n  // Temp State\n  // State for newTask.\n  const [newTask, setNewTask] = useState('');\n\n  // State for task, maybe you modify something(edit task)\n  const [updateData, setUpDateData] = useState('');\n\n  // Add task \n  const addTask = () => {};\n\n  // Delete \n  const deleteTask = id => {};\n\n  // Mark task os done or completed\n  const markDone = id => {};\n\n  // cancel\n\n  const cancelUpdate = () => {};\n\n  // change task for Update \n  const changeTask = e => {};\n\n  // update task\n  const updateTask = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"To Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), toDo && toDo.length ? ' ' : 'No tasks', toDo && toDo.map((task, index) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"taskText\",\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, void 0, false);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MYkO14wgfXxc3Zm3mIJKK/R2X88=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","FontAwesomeIcon","faCircleCheck","faL","faPen","faTrashCan","useState","App","toDo","setToDo","id","newTask","setNewTask","updateData","setUpDateData","addTask","deleteTask","markDone","cancelUpdate","changeTask","e","updateTask","length","map","task","index","title"],"sources":["/Users/matiasacuna/Desktop/Trabajo-React-main/src/App.js"],"sourcesContent":["import React from 'react'\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n import { faCircleCheck, faL, faPen , faTrashCan } from '@fortawesome/free-solid-svg-icons' \n import { useState } from 'react'\n\n\n\nfunction App() {\n\n  // State (to do list) state. \n  const [toDo, setToDo] = useState([\n    {id: 1, \"title\": \"Task 1\", \"status\": false},\n    {id: 1, \"title\": \"Task 1\", \"status\": false}\n  ])\n\n  // Temp State\n  // State for newTask.\n  const [newTask, setNewTask] = useState('');\n\n\n  // State for task, maybe you modify something(edit task)\n  const [updateData, setUpDateData] = useState('');\n\n// Add task \nconst addTask = () => {\n\n}\n\n// Delete \nconst deleteTask = (id) => {\n\n}\n\n// Mark task os done or completed\nconst markDone = (id) => {\n\n}\n\n\n// cancel\n\nconst cancelUpdate = () => {\n\n}\n\n\n// change task for Update \nconst changeTask = (e) => {\n\n}\n\n// update task\nconst updateTask = () => {\n\n}\n\n\n\n\n\n  return (\n\n\n    <div className='container App'>\n      <h2>To Do List</h2>\n      {toDo && toDo.length ? ' ' : 'No tasks'}\n      {toDo && toDo.map((task, index)=> {\n        return(\n          <>\n            <span className='taskText'>{task.title}</span>\n          </>\n\n        )\n\n      })}\n    </div>\n\n    \n \n)\n}\n\nexport default App;\n\n\n\n    \n \n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,OAAO,sCAAsC;AAC7C,SAASC,eAAe,QAAQ,gCAAgC;AAC/D,SAASC,aAAa,EAAEC,GAAG,EAAEC,KAAK,EAAGC,UAAU,QAAQ,mCAAmC;AAC1F,SAASC,QAAQ,QAAQ,OAAO;AAAA;AAAA;AAIjC,SAASC,GAAG,GAAG;EAAA;EAEb;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGH,QAAQ,CAAC,CAC/B;IAACI,EAAE,EAAE,CAAC;IAAE,OAAO,EAAE,QAAQ;IAAE,QAAQ,EAAE;EAAK,CAAC,EAC3C;IAACA,EAAE,EAAE,CAAC;IAAE,OAAO,EAAE,QAAQ;IAAE,QAAQ,EAAE;EAAK,CAAC,CAC5C,CAAC;;EAEF;EACA;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAG1C;EACA,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACA,MAAMS,OAAO,GAAG,MAAM,CAEtB,CAAC;;EAED;EACA,MAAMC,UAAU,GAAIN,EAAE,IAAK,CAE3B,CAAC;;EAED;EACA,MAAMO,QAAQ,GAAIP,EAAE,IAAK,CAEzB,CAAC;;EAGD;;EAEA,MAAMQ,YAAY,GAAG,MAAM,CAE3B,CAAC;;EAGD;EACA,MAAMC,UAAU,GAAIC,CAAC,IAAK,CAE1B,CAAC;;EAED;EACA,MAAMC,UAAU,GAAG,MAAM,CAEzB,CAAC;EAMC,oBAGE;IAAK,SAAS,EAAC,eAAe;IAAA,wBAC5B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmB,EAClBb,IAAI,IAAIA,IAAI,CAACc,MAAM,GAAG,GAAG,GAAG,UAAU,EACtCd,IAAI,IAAIA,IAAI,CAACe,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAI;MAChC,oBACE;QAAA,uBACE;UAAM,SAAS,EAAC,UAAU;UAAA,UAAED,IAAI,CAACE;QAAK;UAAA;UAAA;UAAA;QAAA;MAAQ,iBAC7C;IAIP,CAAC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAKV;AAAC,GAzEQnB,GAAG;AAAA,KAAHA,GAAG;AA2EZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}